/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 30 20:38:43 GMT 2018
 */

package org.freehep.math.minuit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.PrivateAccess;
import org.freehep.math.minuit.MnAlgebraicSymMatrix;
import org.freehep.math.minuit.MnAlgebraicVector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MnAlgebraicSymMatrix_ESTest extends MnAlgebraicSymMatrix_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 578;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      int int1 = (-3258);
      PrivateAccess.setVariable((Class<MnAlgebraicSymMatrix>) MnAlgebraicSymMatrix.class, mnAlgebraicSymMatrix0, "theNRow", (Object) int1);
      PrivateAccess.setVariable((Class<MnAlgebraicSymMatrix>) MnAlgebraicSymMatrix.class, mnAlgebraicSymMatrix0, "theNRow", (Object) int1);
      mnAlgebraicSymMatrix0.ncol();
      int int2 = 1133;
      PrivateAccess.setVariable((Class<MnAlgebraicSymMatrix>) MnAlgebraicSymMatrix.class, mnAlgebraicSymMatrix0, "theSize", (Object) int2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 0;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      int int1 = (-26);
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.set(int1, int1, int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 299
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 1;
      int int1 = 4884;
      double double0 = 0.0;
      int int2 = 11;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int2);
      mnAlgebraicSymMatrix0.data();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 1;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      mnAlgebraicSymMatrix0.clone();
      try { 
        mnAlgebraicSymMatrix0.invert();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 0;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix1 = mnAlgebraicSymMatrix0.clone();
      mnAlgebraicSymMatrix1.nrow();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 0;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      mnAlgebraicSymMatrix0.size();
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix1 = mnAlgebraicSymMatrix0.clone();
      int int1 = 0;
      double double0 = (-3965.2231226);
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix1.set(int0, int1, double0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 3;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      mnAlgebraicSymMatrix0.toString();
      mnAlgebraicSymMatrix0.size();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 866;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      int int1 = 0;
      int int2 = 1;
      double double0 = (-1.0);
      mnAlgebraicSymMatrix0.set(int1, int2, double0);
      int int3 = (-1519);
      int int4 = 0;
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.get(int4, int3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 0;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      int int1 = 1;
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.set(int1, int1, int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 327;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix1 = mnAlgebraicSymMatrix0.clone();
      int int1 = 269;
      int int2 = 479;
      int int3 = 0;
      mnAlgebraicSymMatrix1.get(int3, int1);
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.get(int1, int2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 231;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      // Undeclared exception!
      mnAlgebraicSymMatrix0.eigenvalues();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 965;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      assertNotNull(mnAlgebraicSymMatrix0);
      
      int int1 = mnAlgebraicSymMatrix0.nrow();
      assertTrue(int1 == int0);
      assertEquals(965, int1);
      
      int int2 = 0;
      int int3 = (-5459);
      // Undeclared exception!
      mnAlgebraicSymMatrix0.toString();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 1;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      assertNotNull(mnAlgebraicSymMatrix0);
      
      int int1 = (-850);
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.get(int1, int1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = (-71);
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = null;
      try {
        mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid matrix size: -71
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 911;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      assertNotNull(mnAlgebraicSymMatrix0);
      
      int int1 = mnAlgebraicSymMatrix0.ncol();
      assertTrue(int1 == int0);
      assertEquals(911, int1);
      
      int int2 = 0;
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.get(int2, int1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 0;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      assertNotNull(mnAlgebraicSymMatrix0);
      
      int int1 = mnAlgebraicSymMatrix0.ncol();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.eigenvalues();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 834;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      assertNotNull(mnAlgebraicSymMatrix0);
      
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.get(int0, int0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 1;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      assertNotNull(mnAlgebraicSymMatrix0);
      
      MnAlgebraicVector mnAlgebraicVector0 = mnAlgebraicSymMatrix0.eigenvalues();
      assertNotNull(mnAlgebraicVector0);
      
      int int1 = (-1540);
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix1 = mnAlgebraicSymMatrix0.clone();
      assertNotNull(mnAlgebraicSymMatrix1);
      assertFalse(int0 == int1);
      assertFalse(mnAlgebraicSymMatrix1.equals((Object)mnAlgebraicSymMatrix0));
      assertNotSame(mnAlgebraicSymMatrix0, mnAlgebraicSymMatrix1);
      assertNotSame(mnAlgebraicSymMatrix1, mnAlgebraicSymMatrix0);
      
      int int2 = 2814;
      double double0 = 2754.37;
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.set(int1, int2, double0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 249;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      assertNotNull(mnAlgebraicSymMatrix0);
      
      int int1 = 0;
      double double0 = 1808.013621475;
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.set(int1, int0, double0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 0;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      assertNotNull(mnAlgebraicSymMatrix0);
      
      mnAlgebraicSymMatrix0.invert();
      double[] doubleArray0 = mnAlgebraicSymMatrix0.data();
      assertNotNull(doubleArray0);
      assertEquals(0, doubleArray0.length);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      
      String string0 = mnAlgebraicSymMatrix0.toString();
      assertNotNull(string0);
      assertEquals("LASymMatrix parameters:\n\n", string0);
      
      int int1 = 2957;
      int int2 = 510;
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.get(int1, int2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 0;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      assertNotNull(mnAlgebraicSymMatrix0);
      
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix1 = mnAlgebraicSymMatrix0.clone();
      assertNotNull(mnAlgebraicSymMatrix1);
      assertFalse(mnAlgebraicSymMatrix1.equals((Object)mnAlgebraicSymMatrix0));
      assertNotSame(mnAlgebraicSymMatrix0, mnAlgebraicSymMatrix1);
      assertNotSame(mnAlgebraicSymMatrix1, mnAlgebraicSymMatrix0);
      
      String string0 = mnAlgebraicSymMatrix0.toString();
      assertNotNull(string0);
      assertFalse(mnAlgebraicSymMatrix0.equals((Object)mnAlgebraicSymMatrix1));
      assertNotSame(mnAlgebraicSymMatrix0, mnAlgebraicSymMatrix1);
      assertEquals("LASymMatrix parameters:\n\n", string0);
      
      int int1 = 85;
      int int2 = 864;
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.get(int1, int2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 90;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      assertNotNull(mnAlgebraicSymMatrix0);
      
      int int1 = 0;
      double double0 = 0.0;
      mnAlgebraicSymMatrix0.set(int1, int1, double0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      MnAlgebraicVector mnAlgebraicVector0 = mnAlgebraicSymMatrix0.eigenvalues();
      assertNotNull(mnAlgebraicVector0);
      assertFalse(int0 == int1);
      
      // Undeclared exception!
      mnAlgebraicSymMatrix0.invert();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 1297;
      MnAlgebraicSymMatrix mnAlgebraicSymMatrix0 = new MnAlgebraicSymMatrix(int0);
      assertNotNull(mnAlgebraicSymMatrix0);
      
      int int1 = (-184);
      double double0 = 536.0;
      // Undeclared exception!
      try { 
        mnAlgebraicSymMatrix0.set(int0, int1, double0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.freehep.math.minuit.MnAlgebraicSymMatrix", e);
      }
  }
}
