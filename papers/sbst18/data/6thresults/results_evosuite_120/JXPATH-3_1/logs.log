* EvoSuite 1.0.6-SNAPSHOT
* Going to generate test cases for class: org.apache.commons.jxpath.ri.compiler.CoreOperationCompare
* Starting client
* Connecting to master process on port 13731
* Analyzing classpath: 
  - /var/benchmarks/projects/commons-jxpath-1.3-src/target/classes
  - /var/benchmarks/projects/commons-jxpath-1.3-src/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.jxpath.ri.compiler.CoreOperationCompare
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 62
  - Branch 68
  - Exception 0
  - MutationFactory 103
  - Output 15
  - Method 7
  - MethodNoException 7
  - CBranchFitnessFactory 68
* Using seed 1517342856287
* Starting evolution
[MASTER] 21:07:38.845 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 21:07:43.145 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.JXPathContextReferenceImpl due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.InitialContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.AttributeContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.NamespaceContext due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 21:07:44.636 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.ParentContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.RootContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.JXPathContextReferenceImpl due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.model.VariablePointer due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 21:07:44.661 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 21:07:51.679 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.JXPathContextReferenceImpl due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.InitialContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.NodeSetContext due to org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.apache.commons.jxpath.ri.axes.DescendantContext due to org.evosuite.ga.ConstructionFailedException: Max recursion depth reached
[MASTER] 21:08:01.537 [logback-1] WARN  TestUsageChecker - class org.apache.commons.jxpath.ri.model.VariablePointer$1 looks like an anonymous class, ignoring it (although reflection says false) VariablePointer$1
[MASTER] 21:08:15.792 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 21:08:33.137 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Error: VariableReference: Statement 16, type java.util.List<E> is not assignable to java.util.Collection<java.util.Locale>
[MASTER] 21:08:33.604 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 73s and 147 generations, 77658 statements, best individual has fitness: 57.3859649122807
* Minimizing test suite
* Generated 29 tests with total length 593
[MASTER] 21:09:11.412 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 21:09:11.415 [logback-1] WARN  TimeController - Phase MINIMIZATION lasted too long, 5 seconds more than allowed.
* Compiling and checking tests
[MASTER] 21:09:18.077 [logback-2] ERROR ClassStateSupport - Could not initialize org.apache.commons.jxpath.JXPathContextFactory: org/apache/commons/jxpath/JXPathContextFactoryConfigurationError
[MASTER] 21:09:18.085 [logback-2] ERROR ClassStateSupport - Could not initialize org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org/apache/commons/jxpath/ri/model/beans/CollectionAttributeNodeIterator
[MASTER] 21:09:26.651 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 21:09:26.653 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = (-1502);
boolean boolean0 = true;
Boolean boolean1 = Boolean.valueOf(boolean0);
assertNotNull(boolean1);
assertTrue(boolean1);

String string0 = "Qi|DQ[-R*N1";
boolean boolean2 = Boolean.getBoolean(string0);
assertFalse(boolean2 == boolean0);
assertFalse(boolean2);

Double double0 = new Double(int0);
assertNotNull(double0);
assertEquals((-1502.0), (double)double0, 0.01);

Expression[] expressionArray0 = new Expression[9];
Expression expression0 = mock(Expression.class, new ViolatedAssumptionAnswer());
doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(expression0).compute(any(org.apache.commons.jxpath.ri.EvalContext.class));
doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(expression0).computeValue(any(org.apache.commons.jxpath.ri.EvalContext.class));
expressionArray0[0] = expression0;
Expression expression1 = mock(Expression.class, new ViolatedAssumptionAnswer());
doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(expression1).compute(any(org.apache.commons.jxpath.ri.EvalContext.class));
doReturn((Object) null).when(expression1).computeValue(any(org.apache.commons.jxpath.ri.EvalContext.class));
expressionArray0[1] = expression1;
Expression expression2 = mock(Expression.class, new ViolatedAssumptionAnswer());
doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(expression2).compute(any(org.apache.commons.jxpath.ri.EvalContext.class));
doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(expression2).computeValue(any(org.apache.commons.jxpath.ri.EvalContext.class));
expressionArray0[2] = expression2;
CoreOperationSubtract coreOperationSubtract0 = new CoreOperationSubtract(expressionArray0[0], expressionArray0[2]);
assertEquals("-", coreOperationSubtract0.getSymbol());
assertEquals(9, expressionArray0.length);
assertNotNull(coreOperationSubtract0);

expressionArray0[3] = (Expression) coreOperationSubtract0;
Expression expression3 = mock(Expression.class, new ViolatedAssumptionAnswer());
doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(expression3).compute(any(org.apache.commons.jxpath.ri.EvalContext.class));
doReturn((Object) null).when(expression3).computeValue(any(org.apache.commons.jxpath.ri.EvalContext.class));
expressionArray0[4] = expression3;
Expression expression4 = mock(Expression.class, new ViolatedAssumptionAnswer());
doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(expression4).compute(any(org.apache.commons.jxpath.ri.EvalContext.class));
doReturn((Object) null).when(expression4).computeValue(any(org.apache.commons.jxpath.ri.EvalContext.class));
expressionArray0[5] = expression4;
String string1 = coreOperationSubtract0.toString();
assertEquals("-", coreOperationSubtract0.getSymbol());
assertFalse(string1.equals((Object)string0));
assertNotSame(string1, string0);
assertEquals(9, expressionArray0.length);
assertNotNull(string1);

QName qName0 = mock(QName.class, new ViolatedAssumptionAnswer());
ExtensionFunction extensionFunction0 = new ExtensionFunction(qName0, expressionArray0);
assertTrue(extensionFunction0.computeContextDependent());
assertEquals(9, expressionArray0.length);
assertNotNull(extensionFunction0);

expressionArray0[6] = (Expression) extensionFunction0;
extensionFunction0.args = expressionArray0;
assertTrue(extensionFunction0.computeContextDependent());

int int1 = (-1900);
CoreFunction coreFunction0 = new CoreFunction(int1, expressionArray0);
assertEquals(9, coreFunction0.getArgumentCount());
assertEquals((-1900), coreFunction0.getFunctionCode());
assertFalse(int1 == int0);
assertEquals(9, expressionArray0.length);
assertNotNull(coreFunction0);

Expression expression5 = coreFunction0.getArg1();
assertEquals(9, coreFunction0.getArgumentCount());
assertEquals((-1900), coreFunction0.getFunctionCode());
assertFalse(int1 == int0);
assertFalse(expression5.equals((Object)expression3));
assertFalse(expression5.equals((Object)expression1));
assertFalse(expression5.equals((Object)expression4));
assertFalse(expression5.equals((Object)expression2));
assertNotSame(expression5, expression3);
assertNotSame(expression5, expression1);
assertSame(expression5, expression0);
assertNotSame(expression5, expression4);
assertNotSame(expression5, expression2);
assertEquals(9, expressionArray0.length);
assertNotNull(expression5);

expressionArray0[7] = expression5;
Expression expression6 = mock(Expression.class, new ViolatedAssumptionAnswer());
expressionArray0[8] = expression6;
CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
assertEquals("+", coreOperationAdd0.getSymbol());
assertEquals(9, expressionArray0.length);
assertNotNull(coreOperationAdd0);

NameAttributeTest nameAttributeTest0 = new NameAttributeTest(coreOperationAdd0, coreFunction0);
assertEquals(9, coreFunction0.getArgumentCount());
assertEquals((-1900), coreFunction0.getFunctionCode());
assertEquals("+", coreOperationAdd0.getSymbol());
assertEquals("=", nameAttributeTest0.getSymbol());
assertTrue(nameAttributeTest0.computeContextDependent());
assertFalse(int1 == int0);
assertEquals(9, expressionArray0.length);
assertNotNull(nameAttributeTest0);

EvalContext evalContext0 = mock(EvalContext.class, new ViolatedAssumptionAnswer());
nameAttributeTest0.computeValue(evalContext0);

[MASTER] 21:09:26.654 [logback-1] WARN  TimeController - Phase JUNIT_CHECK lasted too long, 2 seconds more than allowed.
* Writing JUnit test case 'CoreOperationCompare_ESTest' to temp/testcases
* Done!

* Computation finished
