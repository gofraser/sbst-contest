% Generated by IEEEtranS.bst, version: 1.14 (2015/08/26)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtranS.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{moein2017}
M.~M. Almasi, H.~Hemmati, G.~Fraser, A.~Arcuri, and J.~Benefelds, ``An
  industrial evaluation of unit test generation: Finding real faults in a
  financial application,'' in \emph{ACM/IEEE Int. Conference on Software
  Engineering (ICSE)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2017, pp.
  263--272.

\bibitem{ICST16_Tool}
A.~Arcuri, J.~Campos, and G.~Fraser, ``{Unit Test Generation During Software
  Development: EvoSuite Plugins for Maven, IntelliJ and Jenkins},'' in
  \emph{IEEE International Conference on Software Testing, Verification and
  Validation (ICST)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE Computer
  Society, 2016, pp. 401--408.

\bibitem{ICST_Mocking17}
A.~Arcuri, G.~Fraser, and R.~Just, ``Private api access and functional mocking
  in automated unit test generation,'' in \emph{IEEE Int. Conference on
  Software Testing, Verification and Validation (ICST)}, 2017, pp. 126--137.

\bibitem{arcuri2013parameter}
A.~Arcuri and G.~Fraser, ``{Parameter tuning or default values? An empirical
  investigation in search-based software engineering},'' \emph{Empirical
  Software Engineering (EMSE)}, pp. 1--30, 2013.

\bibitem{arcuri2016java}
------, ``Java enterprise edition support in search-based junit test
  generation,'' in \emph{Int. Symposium on Search Based Software
  Engineering}.\hskip 1em plus 0.5em minus 0.4em\relax Springer, 2016, pp.
  3--17.

\bibitem{arcuri2014automated}
A.~Arcuri, G.~Fraser, and J.~P. Galeotti, ``Automated unit test generation for
  classes with environment dependencies,'' in \emph{IEEE/ACM Int. Conference on
  Automated Software Engineering (ASE)}.\hskip 1em plus 0.5em minus 0.4em\relax
  ACM, 2014, pp. 79--90.

\bibitem{ea_evaluation}
J.~Campos, Y.~Ge, N.~Albunian, G.~Fraser, M.~Eler, and A.~Arcuri, ``An
  empirical evaluation of evolutionary algorithms for unit test suite
  generation,'' \emph{Information and Software Technology}, vol. 104, pp. 207
  -- 235, 2018.

\bibitem{FrA11c}
G.~Fraser and A.~Arcuri, ``Evo{S}uite: Automatic test suite generation for
  object-oriented software.'' in \emph{ACM Symposium on the Foundations of
  Software Engineering (FSE)}, 2011, pp. 416--419.

\bibitem{FrA13a}
------, ``Evo{S}uite: On the challenges of test case generation in the real
  world (tool paper),'' in \emph{IEEE Int. Conference on Software Testing,
  Verification and Validation (ICST)}, 2013, pp. 362--369.

\bibitem{evosuiteAtSbst2013}
------, ``{EvoSuite} at the {SBST} 2013 tool competition,'' in \emph{Int.
  Workshop on Search-Based Software Testing (SBST)}, 2013, pp. 406--409.

\bibitem{evosuiteAtFittest2013}
------, ``{EvoSuite} at the second unit testing tool competition.'' in
  \emph{Fittest Workshop}.\hskip 1em plus 0.5em minus 0.4em\relax Springer,
  2013, pp. 95--100.

\bibitem{GoA_TSE12}
------, ``Whole test suite generation,'' \emph{IEEE Transactions on Software
  Engineering}, vol.~39, no.~2, pp. 276--291, 2013.

\bibitem{fraser2014large}
------, ``A large-scale evaluation of automated unit test generation using
  {EvoSuite},'' \emph{ACM Transactions on Software Engineering and Methodology
  (TOSEM)}, vol.~24, no.~2, pp. 8:1--8:42, 2014.

\bibitem{emse14_mutation}
------, ``\BIBforeignlanguage{English}{Achieving scalable mutation-based
  generation of whole test suites.}''
  \emph{\BIBforeignlanguage{English}{Empirical Software Engineering (EMSE)}},
  vol.~20, no.~3, pp. 783--812, 2015.

\bibitem{evosuiteAtSbst2015}
------, ``{EvoSuite} at the {SBST} 2015 tool competition,'' in \emph{Int.
  Workshop on Search-Based Software Testing (SBST)}.\hskip 1em plus 0.5em minus
  0.4em\relax IEEE Press, 2015, pp. 25--27.

\bibitem{evosuiteAtSbst2016}
------, ``{EvoSuite} at the {SBST} 2016 tool competition,'' in \emph{Int.
  Workshop on Search-Based Software Testing (SBST)}.\hskip 1em plus 0.5em minus
  0.4em\relax ACM, 2016, pp. 33--36.

\bibitem{TOSEM_userstudy}
G.~Fraser, M.~Staats, P.~McMinn, A.~Arcuri, and F.~Padberg, ``Does automated
  unit test generation really help software testers? a controlled empirical
  study,'' \emph{ACM Transactions on Software Engineering and Methodology
  (TOSEM)}, vol.~24, no.~4, pp. 23:1--23:49, 2015.

\bibitem{10.1109/TSE.2011.93}
G.~Fraser and A.~Zeller, ``Mutation-driven generation of unit tests and
  oracles,'' \emph{IEEE Transactions on Software Engineering (TSE)}, vol.~28,
  no.~2, pp. 278--292, 2012.

\bibitem{evosuiteAtSbst2017}
J.~C. Gordon~Fraser, Jos\'e Miguel~Rojas and A.~Arcuri, ``{EvoSuite} at the
  {SBST} 2017 tool competition,'' in \emph{Int. Workshop on Search-Based
  Software Testing (SBST)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE Press,
  2017, pp. 39--41.

\bibitem{evosuiteAtSbst2018}
J.~M.~R. Gordon~Fraser and A.~Arcuri, ``{EvoSuite} at the {SBST} 2018 tool
  competition,'' in \emph{Int. Workshop on Search-Based Software Testing
  (SBST)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE Press, 2018, pp. 34--37.

\bibitem{sbst19competition}
F.~Kifetew, X.~Devroey, and U.~Rueda, ``{Java Unit Testing Tool Competition -
  Seventh Round},'' in \emph{Int. Workshop on Search-Based Software Testing
  (SBST)}, 2019.

\bibitem{rojas2015combining}
J.~M. Rojas, J.~Campos, M.~Vivanti, G.~Fraser, and A.~Arcuri, ``Combining
  multiple coverage criteria in search-based unit test generation,'' in
  \emph{Search-Based Software Engineering}.\hskip 1em plus 0.5em minus
  0.4em\relax Springer, 2015, pp. 93--108.

\bibitem{ISSTA15_Study}
J.~M. Rojas, G.~Fraser, and A.~Arcuri, ``Automated unit test generation during
  software development: A controlled experiment and think-aloud observations,''
  in \emph{ACM Int. Symposium on Software Testing and Analysis (ISSTA)}.\hskip
  1em plus 0.5em minus 0.4em\relax ACM, 2015, pp. 338--349.

\bibitem{emse_archive}
J.~M. Rojas, M.~Vivanti, A.~Arcuri, and G.~Fraser, ``{A Detailed Investigation
  of the Effectiveness of Whole Test Suite Generation},'' \emph{Empirical
  Software Engineering (EMSE)}, vol.~22, no.~2, pp. 852--893, 2016.

\bibitem{sakti2015instance}
A.~Sakti, G.~Pesant, and Y.-G. Gu{\'e}h{\'e}neuc, ``Instance generator and
  problem representation to improve object oriented code coverage,'' \emph{IEEE
  Transactions on Software Engineering}, vol.~41, no.~3, pp. 294--313, 2015.

\bibitem{shamshiri2015automatically}
S.~Shamshiri, R.~Just, J.~M. Rojas, G.~Fraser, P.~McMinn, and A.~Arcuri, ``Do
  automatically generated unit tests find real faults? an empirical study of
  effectiveness and challenges,'' in \emph{IEEE/ACM Int. Conference on
  Automated Software Engineering (ASE)}.\hskip 1em plus 0.5em minus 0.4em\relax
  IEEE, 2015, pp. 201--211.

\bibitem{ICST2018_Maintenance}
S.~Shamshiri, J.~M. Rojas, J.~P. Galeotti, N.~Walkinshaw, and G.~Fraser, ``How
  do automatically generated unit tests influence software maintenance?'' in
  \emph{IEEE Int. Conference on Software Testing, Verification and Validation
  (ICST)}, 2018, to appear.

\end{thebibliography}
